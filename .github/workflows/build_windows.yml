name: üèÅ Windows Builds
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

# Global Settings
# SCONS_CACHE for windows must be set in the build environment
env:
  SCONSFLAGS: module_text_server_fb_enabled=yes d3d12=yes strict_checks=yes "angle_libs=${{ github.workspace }}/"
  SCONS_CACHE_MSVC_CONFIG: true

jobs:
  build-windows:
    # Windows 10 with latest image
    runs-on: windows-latest
    name: ${{ matrix.name }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=editor, v8)
            cache-name: windows-editor-v8
            target: editor
            # Skip debug symbols, they're way too big with MSVC.
            sconsflags: debug_symbols=no vsproj=yes vsproj_gen_only=no windows_subsystem=console
            cache-limit: 2

          - name: Template (target=template_debug, v8)
            cache-name: windows-template-debug-v8
            target: template_debug
            sconsflags: debug_symbols=no
            cache-limit: 2

          - name: Template (target=template_release, v8)
            cache-name: windows-template-release-v8
            target: template_release
            sconsflags: debug_symbols=no
            cache-limit: 2

          - name: Editor (target=editor, qjs_ng)
            cache-name: windows-editor-qjs-ng
            target: editor
            # Skip debug symbols, they're way too big with MSVC.
            sconsflags: debug_symbols=no vsproj=yes vsproj_gen_only=no windows_subsystem=console use_quickjs_ng=yes
            cache-limit: 2
            engine: qjs_ng

          - name: Template (target=template_debug, qjs_ng)
            cache-name: windows-template-debug-qjs-ng
            target: template_debug
            sconsflags: debug_symbols=no use_quickjs_ng=yes
            cache-limit: 2
            engine: qjs_ng

          - name: Template (target=template_release, qjs_ng)
            cache-name: windows-template-release-qjs-ng
            target: template_release
            sconsflags: debug_symbols=no use_quickjs_ng=yes
            cache-limit: 2
            engine: qjs_ng

    steps:
      - name: Checkout Godot
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: ${{ inputs.version }}
          submodules: recursive

      - name: Checkout GodotJS
        uses: actions/checkout@v4
        with:
          path: ${{github.workspace}}/modules/GodotJS/
          lfs: true
          submodules: recursive

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true


      - name: Download deps artifact
        uses: actions/download-artifact@v4
        with:
          name: V8
          path: ${{github.workspace}}/modules/GodotJS/v8

      - name: Download out
        uses: actions/download-artifact@v4
        with:
          name: out
          path: ${{github.workspace}}/modules/GodotJS/scripts/out

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Download Direct3D 12 SDK components
        run: python ./misc/scripts/install_d3d12_sdk_windows.py

      - name: Download pre-built ANGLE static libraries
        uses: dsaltares/fetch-gh-release-asset@1.1.2
        with:
          repo: godotengine/godot-angle-static
          version: tags/chromium/6601.2
          file: godot-angle-static-x86_64-msvc-release.zip
          target: angle/angle.zip

      - name: Extract pre-built ANGLE static libraries
        run: Expand-Archive -Force angle/angle.zip ${{ github.workspace }}/

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: windows
          target: ${{ matrix.target }}
          scons-cache-limit: ${{ matrix.cache-limit }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Prepare artifact
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}
