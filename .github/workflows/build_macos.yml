name: üçé macOS Builds
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      version_ref:
        description: "Godot engine commit reference"
        required: true
        type: string

# Global Settings
env:
  # 4.4
  SCONSFLAGS: >-
    module_text_server_fb_enabled=yes
    strict_checks=yes
  # 4.5
  # Ideally we'd use dev_mode=yes. Unfortunately, v8 headers contain warnings. So we manually set some dev_mode options.
  SCONS_FLAGS: >-
    verbose=yes
    warnings=extra
    strict_checks=yes
    module_text_server_fb_enabled=yes
    "accesskit_sdk_path=${{ github.workspace }}/accesskit-c-0.17.0/"

jobs:
  build-macos:
    runs-on: macos-latest
    name: ${{ matrix.name }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=editor, v8)
            cache-name: macos-editor-${{inputs.version}}-v8
            target: editor
            cache-limit: 1

          - name: Template (target=template_release, v8)
            cache-name: macos-template-${{inputs.version}}-release-v8
            target: template_release
            sconsflags: debug_symbols=no
            cache-limit: 1

          - name: Template (target=template_debug, v8)
            cache-name: macos-template-${{inputs.version}}-debug-v8
            target: template_debug
            sconsflags: debug_symbols=no
            cache-limit: 1

          - name: Editor (target=editor, qjs_ng)
            cache-name: macos-editor-${{inputs.version}}-qjs-ng
            target: editor
            sconsflags: use_quickjs_ng=yes
            cache-limit: 1

          - name: Template (target=template_release, qjs_ng)
            cache-name: macos-template-${{inputs.version}}-release-qjs-ng
            target: template_release
            sconsflags: >-
              debug_symbols=no
              use_quickjs_ng=yes
            cache-limit: 1

          - name: Template (target=template_debug, qjs_ng)
            cache-name: macos-template-${{inputs.version}}-debug-qjs-ng
            target: template_debug
            sconsflags: >-
              debug_symbols=no
              use_quickjs_ng=yes
            cache-limit: 1

    steps:
      - name: Select Xcode 16
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Checkout Godot
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: ${{ inputs.version_ref }}
          submodules: recursive

      - name: Checkout GodotJS
        uses: actions/checkout@v4
        with:
          path: ${{github.workspace}}/modules/GodotJS/
          lfs: true
          submodules: recursive

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Download pre-built AccessKit [4.5+]
        if: inputs.version != '4.4'
        uses: dsaltares/fetch-gh-release-asset@1.1.2
        with:
          repo: AccessKit/accesskit-c
          version: tags/0.17.0
          file: accesskit-c-0.17.0.zip
          target: accesskit-c-0.17.0/accesskit_c.zip

      - name: Extract pre-built AccessKit [4.5+]
        if: inputs.version != '4.4'
        run: unzip -o accesskit-c-0.17.0/accesskit_c.zip

      - name: Setup Vulkan SDK
        id: vulkan-sdk
        run: |
          if sh misc/scripts/install_vulkan_sdk_macos.sh; then
            echo "VULKAN_ENABLED=yes" >> "$GITHUB_OUTPUT"
          else
            echo "::warning::macOS: Vulkan SDK installation failed, building without Vulkan support."
            echo "VULKAN_ENABLED=no" >> "$GITHUB_OUTPUT"
          fi
        continue-on-error: true

      - name: Download deps artifact
        uses: actions/download-artifact@v4
        with:
          name: V8
          path: ${{github.workspace}}/modules/GodotJS/v8

      - name: Download scripts/out
        uses: actions/download-artifact@v4
        with:
          name: scripts-out
          path: ${{github.workspace}}/modules/GodotJS/scripts/out

      - name: Compilation [4.4] (x86_64)
        if: inputs.version == '4.4'
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=x86_64 vulkan=${{ steps.vulkan-sdk.outputs.VULKAN_ENABLED }}
          platform: macos
          target: ${{ matrix.target }}
          scons-cache-limit: 0 # Only cap on second run to avoid purging unnecessarily

      - name: Compilation [4.5+] (x86_64)
        if: inputs.version != '4.4'
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONS_FLAGS }} ${{ matrix.sconsflags }} arch=x86_64 vulkan=${{ steps.vulkan-sdk.outputs.VULKAN_ENABLED }}
          platform: macos
          target: ${{ matrix.target }}

      - name: Compilation [4.4] (arm64)
        if: inputs.version == '4.4'
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=arm64 vulkan=${{ steps.vulkan-sdk.outputs.VULKAN_ENABLED }}
          platform: macos
          target: ${{ matrix.target }}
          scons-cache-limit: ${{ matrix.cache-limit }}

      - name: Compilation [4.5+] (arm64)
        if: inputs.version != '4.4'
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONS_FLAGS }} ${{ matrix.sconsflags }} arch=arm64 vulkan=${{ steps.vulkan-sdk.outputs.VULKAN_ENABLED }}
          platform: macos
          target: ${{ matrix.target }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

# TODO: The x86_64 build isn't working with `Forward+` projects see: https://github.com/godotengine/godot/issues/64471
# Check why the official build is working:
# - https://github.com/godotengine/godot-build-scripts/blob/main/build.sh#L147-L157
# - https://github.com/godotengine/godot-build-scripts/blob/main/build-macos/build.sh#L7-L87
# - https://github.com/godotengine/godot-build-scripts/blob/main/build-release.sh#L367-L375
      - name: Prepare artifact
        run: |
          lipo -create ./bin/godot.macos.${{ matrix.target }}.x86_64 ./bin/godot.macos.${{ matrix.target }}.arm64 -output ./bin/godot.macos.${{ matrix.target }}.universal
          rm ./bin/godot.macos.${{ matrix.target }}.x86_64 ./bin/godot.macos.${{ matrix.target }}.arm64
          strip bin/godot.*
          chmod +x bin/godot.*

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}

  build-macos-apps:
    needs:
      - build-macos
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        engine: [ v8,qjs-ng ]
    steps:
      - name: Checkout Godot
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: ${{ inputs.version_ref }}
          submodules: recursive

      - name: ‚è¨ Download editor
        uses: actions/download-artifact@v4
        with:
          name: macos-editor-${{inputs.version}}-${{ matrix.engine }}
          path: macos-editor-${{inputs.version}}-${{ matrix.engine }}

      - name: ‚öíÔ∏è Build Editor App
        run: |
          mkdir editor-app
          cp -r misc/dist/macos_tools.app editor-app/Godot.app
          mkdir -p editor-app/Godot.app/Contents/MacOS
          cp macos-editor-${{inputs.version}}-${{ matrix.engine }}/godot.macos.editor.universal editor-app/Godot.app/Contents/MacOS/Godot
          chmod +x editor-app/Godot.app/Contents/MacOS/Godot

      - name: ‚è´ Upload editor app
        uses: actions/upload-artifact@v4
        with:
          name: macos-editor-${{inputs.version}}-app-${{ matrix.engine }}
          path: editor-app

      - name: ‚è¨ Download template-release
        uses: actions/download-artifact@v4
        with:
          name: macos-template-${{inputs.version}}-release-${{ matrix.engine }}
          path: macos-template-${{inputs.version}}-release-${{ matrix.engine }}

      - name: ‚è¨ Download template-debug
        uses: actions/download-artifact@v4
        with:
          name: macos-template-${{inputs.version}}-debug-${{ matrix.engine }}
          path: macos-template-${{inputs.version}}-debug-${{ matrix.engine }}

      - name: ‚öíÔ∏è Build Template App
        run: |
          mkdir template-app
          cp -r misc/dist/macos_template.app template-app/macos_template.app
          mkdir -p template-app/macos_template.app/Contents/MacOS
          cp macos-template-${{inputs.version}}-release-${{ matrix.engine }}/godot.macos.template_release.universal template-app/macos_template.app/Contents/MacOS/godot_macos_release.universal
          cp macos-template-${{inputs.version}}-debug-${{ matrix.engine }}/godot.macos.template_debug.universal template-app/macos_template.app/Contents/MacOS/godot_macos_debug.universal
          chmod +x template-app/macos_template.app/Contents/MacOS/godot_macos*

      - name: ‚è´ Upload template app
        uses: actions/upload-artifact@v4
        with:
          name: macos-template-${{inputs.version}}-app-${{ matrix.engine }}
          path: template-app
