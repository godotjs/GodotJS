name: ü¶Ö Release Builds
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      v8:
        required: true
        type: string

permissions:
  contents: write

jobs:
  rename:
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout repo
        uses: actions/checkout@v4

      - name: üìõ Add version to release name
        uses: actions/github-script@v6
        with:
          result-encoding: json
          script: |
            const { repo, owner } = context.repo;
            await github.rest.repos.updateRelease({
              owner,
              repo,
              release_id: context.payload.release.id,
              name: '${{ inputs.version }}-${{ inputs.v8 }}-' + context.payload.release.name,
            });

  release:
    runs-on: ubuntu-latest
    name: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.engine }}
    strategy:
      fail-fast: false
      matrix:
        engine: [ v8,qjs-ng ]
        os:
          - android
          - ios
          - linux
          - macos
          - web
          - web-nothreads
          - windows
        include:
          - target: template-release
          - target: template-debug
            os: [ linux, macos, windows ]
          - target: editor
            os: [ linux, macos, windows ]
    steps:
      - name: ‚è¨ Checkout repo
        uses: actions/checkout@v4

      - name: üß¨ Generate Name
        id: name
        run: |
          echo "name=${{ matrix.os }}-${{ matrix.target }}-${{ matrix.engine }}" >> $GITHUB_OUTPUT

      - name: ‚è¨ Download build
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.name.outputs.name }}
          path: ${{ steps.name.outputs.name }}

      - name: üì¶ Pack build as zip
        run: zip -r ${{ steps.name.outputs.name }}.zip ${{ steps.name.outputs.name }}
        shell: bash

      - name: ‚è´ Upload Release Asset
        id: upload-release-asset
        uses: actions/github-script@v6
        with:
          result-encoding: json
          script: |
            const FS = require('node:fs')
            const { repo, owner } = context.repo;
            return await github.rest.repos.uploadReleaseAsset({
              owner,
              repo,
              release_id: context.payload.release.id,
              name: '${{ steps.name.outputs.name }}.zip',
              data: FS.readFileSync('${{ github.workspace }}/${{ steps.name.outputs.name }}.zip')
            });
