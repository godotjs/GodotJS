name: ü¶Ö Release Builds
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      v8:
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.publish_release.outputs.id }}
    steps:
      - name: ‚è¨ Checkout repo
        uses: actions/checkout@v4

      - name: üõ´ Setup pnpm
        uses: pnpm/action-setup@v4

      - name: ü¶ï‚ùå Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: üîÑÔ∏è Install dependencies
        run: pnpm install

      - name: üö¢ Publish release
        id: publish_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pnpm ci:publish ${{ inputs.version }} ${{ inputs.v8 }}
          RELEASE_ID=$(gh release view ${{ inputs.version }} --json id --jq ".id")          
          echo "id=$RELEASE_ID" >> $GITHUB_OUTPUT

  upload-assets:
    runs-on: ubuntu-latest
    name: ${{ matrix.os }}-${{ matrix.target }}-${{ matrix.engine }}
    needs: [ release ]
    strategy:
      fail-fast: false
      matrix:
        engine: [ v8, qjs-ng ]
        os: [ android, ios, linux, macos, web, web-nothreads, windows ]
        target: [ template-release ]
        include:
          - target: template-debug
            os: linux
          - target: template-app
            os: macos
          - target: template-debug
            os: windows
          - target: editor
            os: linux
          - target: editor-app
            os: macos
          - target: editor
            os: windows
        exclude:
          - target: template-release
            os: macos
    steps:
      - name: ‚è¨ Checkout repo
        uses: actions/checkout@v4

      - name: üß¨ Generate Name
        id: name
        run: |
          echo "name=${{ matrix.os }}-${{ matrix.target }}-${{ matrix.engine }}" >> $GITHUB_OUTPUT

      - name: ‚è¨ Download build
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.name.outputs.name }}
          path: ${{ steps.name.outputs.name }}

      - name: üì¶ Pack build as zip
        run: zip -r ${{ steps.name.outputs.name }}.zip ${{ steps.name.outputs.name }}
        shell: bash

      - name: ‚è´ Upload Release Asset
        id: upload-release-asset
        uses: actions/github-script@v6
        with:
          result-encoding: json
          script: |
            const FS = require('node:fs')
            const { repo, owner } = context.repo;
            return await github.rest.repos.uploadReleaseAsset({
              owner,
              repo,
              release_id: ${{ needs.release.outputs.id }},
              name: '${{ steps.name.outputs.name }}.zip',
              data: FS.readFileSync('${{ github.workspace }}/${{ steps.name.outputs.name }}.zip')
            });
